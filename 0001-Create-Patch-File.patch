From a42e90b65397c01d8f550575620ca34dfaa06e5f Mon Sep 17 00:00:00 2001
From: Christian Tioye <xristianty@gmail.com>
Date: Thu, 10 Sep 2020 04:15:32 +0000
Subject: [PATCH] Create Patch File

---
 client3.py     | 118 ++++++++++++++++++++++++-------------------------
 client_test.py |  10 +++--
 new_client3.py |  54 ++++++++++++++++++++++
 3 files changed, 120 insertions(+), 62 deletions(-)
 create mode 100644 new_client3.py

diff --git a/client3.py b/client3.py
index f1771c3..bd70f36 100644
--- a/client3.py
+++ b/client3.py
@@ -1,59 +1,59 @@
-################################################################################
-#
-#  Permission is hereby granted, free of charge, to any person obtaining a
-#  copy of this software and associated documentation files (the "Software"),
-#  to deal in the Software without restriction, including without limitation
-#  the rights to use, copy, modify, merge, publish, distribute, sublicense,
-#  and/or sell copies of the Software, and to permit persons to whom the
-#  Software is furnished to do so, subject to the following conditions:
-#
-#  The above copyright notice and this permission notice shall be included in
-#  all copies or substantial portions of the Software.
-#
-#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-#  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-#  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-#  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-#  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-#  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-#  DEALINGS IN THE SOFTWARE.
-
-import urllib.request
-import time
-import json
-import random
-
-# Server API URLs
-QUERY = "http://localhost:8080/query?id={}"
-
-# 500 server request
-N = 500
-
-def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
-	stock = quote['stock']
-	bid_price = float(quote['top_bid']['price'])
-	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
-	return stock, bid_price, ask_price, price
-
-def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
-
-# Main
-if __name__ == "__main__":
-
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
-
-		print ("Ratio %s" % getRatio(price, price))
+# ################################################################################
+# #
+# #  Permission is hereby granted, free of charge, to any person obtaining a
+# #  copy of this software and associated documentation files (the "Software"),
+# #  to deal in the Software without restriction, including without limitation
+# #  the rights to use, copy, modify, merge, publish, distribute, sublicense,
+# #  and/or sell copies of the Software, and to permit persons to whom the
+# #  Software is furnished to do so, subject to the following conditions:
+# #
+# #  The above copyright notice and this permission notice shall be included in
+# #  all copies or substantial portions of the Software.
+# #
+# #  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
+# #  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# #  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+# #  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# #  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+# #  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+# #  DEALINGS IN THE SOFTWARE.
+
+# import urllib.request
+# import time
+# import json
+# import random
+
+# # Server API URLs
+# QUERY = "http://localhost:8080/query?id={}"
+
+# # 500 server request
+# N = 500
+
+# def getDataPoint(quote):
+# 	""" Produce all of the needed values to generate a datapoint """
+# 	""" ------------- Update this function ------------- """
+# 	stock = quote['stock']
+# 	bid_price = float(quote['top_bid']['price'])
+# 	ask_price = float(quote['top_ask']['price'])
+# 	price = bid_price
+# 	return stock, bid_price, ask_price, price
+
+# def getRatio(price_a, price_b):
+# 	""" Get ratio of price_a and price_b """
+# 	""" ------------- Update this function ------------- """
+# 	""" Also create some unit tests for this function in client_test.py """
+# 	return 1
+
+# # Main
+# if __name__ == "__main__":
+
+# 	# Query the price once every N seconds.
+# 	for _ in iter(range(N)):
+# 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+# 		""" ----------- Update to get the ratio --------------- """
+# 		for quote in quotes:
+# 			stock, bid_price, ask_price, price = getDataPoint(quote)
+# 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+
+# 		print ("Ratio %s" % getRatio(price, price))
diff --git a/client_test.py b/client_test.py
index af2bf26..7752538 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,13 +1,16 @@
 import unittest
-from client3 import getDataPoint
+from new_client3 import *
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
-    quotes = [
+    quotas = [
       {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
+
     """ ------------ Add the assertion below ------------ """
+	for quote in quotas:
+			self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,7 +18,8 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
-
+		for quote in quotes:
+			self.assertEqual(getDataPoint(quote), (quote['stock'], quote['top_bid']['price'], quote['top_ask']['price'], (quote['top_bid']['price'] + quote['top_ask']['price'])/2))
 
   """ ------------ Add more unit tests ------------ """
 
diff --git a/new_client3.py b/new_client3.py
new file mode 100644
index 0000000..8873d6c
--- /dev/null
+++ b/new_client3.py
@@ -0,0 +1,54 @@
+#This is where you would manually type the existing code in the client3.py, which is inside the jpm_module_1 folder (disregard copying the useless comments) so that you can avoid the dreaded tab editing issues in REPL particularly for the Python environment only
+
+#After manually copying the useful code in client3.py, you can make your changes here
+
+#Before you test your modified code is working, make sure you have done the initial steps needed to be done before making changes in the instruction slides
+
+#Then, to test, first, delete the client3.py file inside jpm_module_1. Then rename this file to just client3.py. Finally move this file inside the jpm_module_1 folder  
+
+# Delete these comments when you're done...
+# Comments are anything that's preceded with '#'
+
+import urllib.request
+import time
+import json
+import random
+
+# Server API URLs
+QUERY = "http://localhost:8080/query?id={}"
+
+# 500 server request
+N = 500
+
+def getDataPoint(quote):
+	""" Produce all of the needed values to generate a datapoint """
+	""" ------------- Update this function ------------- """
+	stock = quote['stock']
+	bid_price = float(quote['top_bid']['price'])
+	ask_price = float(quote['top_ask']['price'])
+	price = (bid_price + ask_price)/2
+	return stock, bid_price, ask_price, price
+
+def getRatio(price_a, price_b):
+	""" Get ratio of price_a and price_b """
+	""" ------------- Update this function ------------- """
+	""" Also create some unit tests for this function in client_test.py """
+	if (price_b == 0):
+		#when price_b is 0 avoid throwing ZeroDivisionError
+		return
+	return price_a/price_b
+
+# Main
+if __name__ == "__main__":
+
+	# Query the price once every N seconds.
+	for _ in iter(range(N)):
+		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+
+		""" ----------- Update to get the ratio --------------- """
+		prices = {}
+		for quote in quotes:
+			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock] = price
+			print ("Quoted %s at (bid: %s, ask: %s, price: %.2f)" % (stock, bid_price, ask_price, price))
+		print ("Ratio: %.2f"%getRatio(prices['ABC'], prices['DEF']))
\ No newline at end of file
-- 
2.17.1

